@model OnlineShop.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Produkty</h4>
    <hr />
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row details-row">
        @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
        <div class="col-sm-12 col-lg-5 text-center product-img">
            
            @{
                var temp = Model.filePath.Split('\\');
                if (Model.filePath == null)
                {
                    <img class="img-responsive" src="https://via.placeholder.com/500x500.png?text=Product+details+img" width="500" height="500" />
                }
                else
                {
                    <img class="img-responsive" src=@("/Content/Images/" + temp[temp.Count() - 1]) width="500" height="500" />
                }

            }

            <input type="file" name="filePath" id="filePath" runat="server" />
            @Html.ValidationMessageFor(model => model.filePath)
        </div>
            <div class="col-sm-12 col-lg-7 justify-content-center">
                <div class="details-content">
                    <div class="product-name">
                        <div class="form-group">
                            <div class="product-name-input">
                                @Html.LabelFor(model => model.name)

                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="product-price">
                        @Html.LabelFor(model => model.price)
                        @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                    </div>
                    <div class="product-description">
                        @Html.LabelFor(model => model.description)
                        <p class="hint">Use HTML tags to format text</p>
                        @Html.TextAreaFor(model => model.description, new { @class = "form-control" })
                    </div>
                    <div class="submit-changes">
                        <button type="submit" class="btn btn-default">
                            <span class="glyphicon glyphicon-floppy-disk" style="margin-right: 12px;"></span>Save
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>