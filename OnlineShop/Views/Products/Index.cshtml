@model IEnumerable<OnlineShop.Models.Product>
@section styles {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/shop_styles.css")" />
}
@{
    ViewBag.Title = "Products";
}
<!-- Shop -->
<div class="content-container">
    <div class="container">
        <div class="row">
            <div class="col-lg-3">
                <!-- Shop Sidebar -->
                <div class="shop_sidebar">
                    <div class="sidebar_section">
                        <div class="sidebar_title">Categories</div>
                        @{ Html.RenderAction("CategoriesMenu", "Products");}
                    </div>
                    @*<div class="sidebar_section filter_by_section">
                            <div class="sidebar_title">Filter By</div>
                            <div class="sidebar_subtitle">Price</div>
                            <div class="filter_price">
                                <div id="slider-range" class="slider_range"></div>
                                <p>Range: </p>
                                <p><input type="text" id="amount" class="amount" readonly style="border:0; font-weight:bold;"></p>
                            </div>
                        </div>
                        <div class="sidebar_section">
                            <div class="sidebar_subtitle color_subtitle">Color</div>
                            <ul class="colors_list">
                                <li class="color"><a href="#" style="background: #b19c83;"></a></li>
                                <li class="color"><a href="#" style="background: #000000;"></a></li>
                                <li class="color"><a href="#" style="background: #999999;"></a></li>
                                <li class="color"><a href="#" style="background: #0e8ce4;"></a></li>
                                <li class="color"><a href="#" style="background: #df3b3b;"></a></li>
                                <li class="color"><a href="#" style="background: #ffffff; border: solid 1px #e1e1e1;"></a></li>
                            </ul>
                        </div>
                        <div class="sidebar_section">
                            <div class="sidebar_subtitle brands_subtitle">Brands</div>
                            <ul class="brands_list">
                                <li class="brand"><a href="#">Apple</a></li>
                                <li class="brand"><a href="#">Beoplay</a></li>
                                <li class="brand"><a href="#">Google</a></li>
                                <li class="brand"><a href="#">Meizu</a></li>
                                <li class="brand"><a href="#">OnePlus</a></li>
                                <li class="brand"><a href="#">Samsung</a></li>
                                <li class="brand"><a href="#">Sony</a></li>
                                <li class="brand"><a href="#">Xiaomi</a></li>
                            </ul>
                        </div>*@
                </div>
            </div>
            <div class="col-lg-9">
                <!-- Shop Content -->
                <div class="shop_content">
                    <div class="shop_bar clearfix">
                        @*
                            <div class="shop_product_count"><span>@Model.Count</span> products found</div>*@
                        <div class="shop_sorting">
                            <span>Sort by:</span>
                            <ul>
                                <li>
                                    <span class="sorting_text">highest rated<i class="material-icons md-24">keyboard_arrow_down</i></span>
                                    <ul>
                                        <li class="shop_sorting_button" data-isotope-option='{ "sortBy": "original-order" }'>highest rated</li>
                                        <li class="shop_sorting_button" data-isotope-option='{ "sortBy": "name" }'>name</li>
                                        <li class="shop_sorting_button" data-isotope-option='{ "sortBy": "price" }'>price</li>
                                    </ul>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="product_grid">
                        <div class="product_grid_border"></div>
                        <!-- Product Item -->
                        @if (ViewBag.Ograniczeni == 0)
                        {
                            foreach (var product in Model)
                            {

                                <div class="product_item is_new">
                                    <div class="product_border"></div>
                                    <div class="product_image d-flex flex-column align-items-center justify-content-center">
                                        @if (!product.image.ContainsKey("smaller"))
                                        {
                                            <img class="img-responsive" src="https://via.placeholder.com/115x115.png" />
                                        }
                                        else
                                        {
                                            <img class="img-responsive" src=@(product.image["smaller"]) />
                                        }
                                    </div>
                                    <div class="product_content">
                                        <div class="product_price">@Html.DisplayFor(modelItem => product.price)</div>
                                        <div class="product_name"><div>@Html.ActionLink(product.name, "Details", "Products", new { id = product.Id }, null)</div></div>
                                    </div>
                                    <div>
                                        @Html.ActionLink("buy now", "buy/" + product.Id, "Home") <br />
                                        @Html.ActionLink("add to cart", "AddToCart", "ShoppingCart", new { id = product.Id }, null)
                                    </div>
                                </div>

                            }
                        }
                        else
                        {

                            for (int a = ViewBag.i; a < ViewBag.Ograniczeni; a++)
                            {

                                <div class="product_item is_new">
                                    <div class="product_border"></div>
                                    <div class="product_image d-flex flex-column align-items-center justify-content-center">
                                        @if (!Model.ElementAt(a).image.ContainsKey("smaller"))
                                        {
                                            <img class="img-responsive" src="https://via.placeholder.com/115x115.png" />
                                        }
                                        else
                                        {
                                            <img class="img-responsive" src=@(Model.ElementAt(a).image["smaller"]) />
                                        }
                                    </div>
                                    <div class="product_content">
                                        <div class="product_price">@Html.DisplayFor(modelItem => Model.ElementAt(a).price)</div>
                                        <div class="product_name"><div>@Html.ActionLink(Model.ElementAt(a).name, "Details", "Products", new { id = Model.ElementAt(a).Id }, null)</div></div>
                                    </div>
                                </div>
                            }
                        }

                    </div>
                    <!-- Shop Page Navigation -->

                    <div class="shop_page_nav d-flex flex-row">
                        @if (ViewBag.str >= 2)
                        {
                            <div class="page_prev d-flex flex-column align-items-center justify-content-center">
                                <i class="material-icons md-24">

                                    @Html.ActionLink("<", "Index", "Products", new { str = (ViewBag.str - 1) }, null)

                                </i>
                            </div>
                        }
                        <ul class="page_nav d-flex flex-row">
                            @for (int a = 1; a <= ViewBag.ilosc_stron; a++)
                            {

                                <li>
                                    @Html.ActionLink(a.ToString(), "Index", "Products", new { str = a }, null)

                                </li>

                            }
                        </ul>
                        @if (ViewBag.str < Model.Count())
                        {
                            <div class="page_next d-flex flex-column align-items-center justify-content-center">


                                <i class="material-icons md-24">

                                    @Html.ActionLink(">", "Index", "Products", new { str = (ViewBag.str + 1) }, null)
                                </i>

                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div> 